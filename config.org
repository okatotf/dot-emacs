#+TITLE: Rowan's Emacs Config

* Configuration
** Misc
*** Set Custom File
#+begin_src emacs-lisp
  (setq custom-file "~/.emacs.d/custom.el")
  (when (file-exists-p custom-file)
    (load custom-file))
#+end_src

*** Use Y/N Instead of Yes/No
#+begin_src emacs-lisp
  (fset 'yes-or-no-p 'y-or-n-p)
#+end_src

*** Tab Bar Mode
#+begin_src emacs-lisp
  (tab-bar-mode 1)
#+end_src

** Packages
*** Initialize Melpa
#+begin_src emacs-lisp
  (require 'package)
  (package-initialize)
#+end_src

*** Use-Package
#+begin_src emacs-lisp
  (eval-when-compile (add-to-list 'load-path "~/.config/emacs/elpa/use-package-2.4.5/")
                     (require 'use-package))
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+end_src

** Dired
*** Use Single Buffer 
#+begin_src emacs-lisp
  (setq dired-kill-when-opening-new-dired-buffer t)
#+end_src

*** Listing Settings
#+begin_src emacs-lisp
  (setq dired-listing-switches "-lh --group-directories-first")
#+end_src

*** All The Icons
#+begin_src emacs-lisp
  (use-package all-the-icons-dired
    :config
    (add-hook 'dired-mode-hook 'all-the-icons-dired-mode))
#+end_src

** Appearance
*** Emacs Settings
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)
  (setq initial-scratch-message nil)
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (set-frame-font "Fira Code 12" nil t)
  (set-frame-parameter nil 'alpha 90)
#+end_src

*** Shell Commands
#+begin_src emacs-lisp
  (call-process-shell-command "xcompmgr &" nil 0)
  (call-process-shell-command "feh --bg-fill ~/Pictures/futuristic.jpg" nil 0)
#+end_src

*** External Packages
#+begin_src emacs-lisp
  (use-package doom-modeline 
    :init (doom-modeline-mode 1))
  (use-package doom-themes 
    :config (load-theme 'doom-tokyo-night t))
#+end_src

** Org Mode
*** Default Org-Idendent
#+begin_src emacs-lisp
  (setq org-startup-indented t)
#+end_src

** EXWM
*** Prepare EXWM
#+begin_src emacs-lisp 
  (add-to-list 'load-path "~/.emacs.d/exwm/")
  (add-to-list 'load-path "~/.emacs.d/xelb/")
  (require 'exwm)
#+end_src

*** Keybinds
#+begin_src emacs-lisp
  (setq exwm-input-global-keys
        `(
          ;; 's-r': Toggle
          ([?\s-r] . (lambda ()
                       (interactive)
                       (if exwm-window-type
                           (if (string= exwm--input-mode "line-mode")
                               (call-interactively #'exwm-input-release-keyboard)
                             (call-interactively #'exwm-input-grab-keyboard))
                         (message "Not on a EXWM window"))))
          ;; 's-d': Application Search
          ([?\s-d] . counsel-linux-app)
          ;; 's-v' Open Virosm HTTPS
          ([?\s-v] . (find-file "~"))
          ;; 's-b': Switch Buffer.
          ([?\s-b] . ivy-switch-buffer)
          ;; 's-&': Launch application.
          ([?\s-&] . (lambda (command) 
                       (interactive (list (read-shell-command "$ "))) 
                       (start-process-shell-command command nil
                                                    command)))))
  ;; Line-editing shortcuts
  (setq exwm-input-simulation-keys
        '(([?\C-b] . [left]) 
          ([?\C-f] . [right]) 
          ([?\C-p] . [up]) 
          ([?\C-n] . [down]) 
          ([?\C-a] . [home]) 
          ([?\C-e] . [end]) 
          ([?\M-v] . [prior]) 
          ([?\C-v] . [next]) 
          ([?\C-d] . [delete]) 
          ([?\C-k] . [S-end delete])))
#+end_src

*** Buffer Names
#+begin_src emacs-lisp
  (defun exwm-rename-buffer ()
    (interactive)
    (exwm-workspace-rename-buffer
     (concat exwm-class-name ":"
             (if (<= (length exwm-title) 50) exwm-title
               (concat (substring exwm-title 0 49) "...")))))
  (add-hook 'exwm-update-class-hook 'exwm-rename-buffer)
  (add-hook 'exwm-update-title-hook 'exwm-rename-buffer)
#+end_src

*** System Tray
#+begin_src emacs-lisp
  (require 'exwm-systemtray)
  (exwm-systemtray-enable)
#+end_src

*** Enable EXWM
#+begin_src emacs-lisp
  (exwm-enable)
#+end_src
